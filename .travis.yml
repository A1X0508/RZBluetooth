# references:
# * http://www.objc.io/issue-6/travis-ci.html
# * https://github.com/supermarin/xcpretty#usage

language: objective-c
osx_image: xcode7.3
install:
- gem install xcpretty --no-rdoc --no-ri --no-document --quiet
- export PYTHONUSERBASE=~/.local
- easy_install --user scan-build
script:
# "warm" iPhone 6 simulator by pre-launching it so tests don't hang
- export IOS_SIMULATOR_UDID=`instruments -s devices | grep "iPhone 6 (9.3" | awk -F '[\[]' '{print $2}' | awk -F '[\]]' '{print $1}'`
- open -a "simulator" --args -CurrentDeviceUDID $IOS_SIMULATOR_UDID

# Run tests on iPhone 6 simulator (64-bit)
- set -o pipefail && xcodebuild test -project RZBluetooth.xcodeproj -scheme RZBluetooth -destination 'name=iPhone 6' ONLY_ACTIVE_ARCH=NO | xcpretty

# "warm" iPhone 4s simulator
- export IOS_SIMULATOR_UDID=`instruments -s devices | grep "iPhone 4s (9.3" | awk -F '[\[]' '{print $2}' | awk -F '[\]]' '{print $1}'`
- open -a "simulator" --args -CurrentDeviceUDID $IOS_SIMULATOR_UDID

# Run tests on iPhone 4s simulator (32-bit)
- set -o pipefail && xcodebuild test -project RZBluetooth.xcodeproj -scheme RZBluetooth -destination 'name=iPhone 4s' ONLY_ACTIVE_ARCH=NO | xcpretty

# use scan-build with --status-bugs to fail the build for static analysis warnings per http://jonboydell.blogspot.ca/2013/02/clang-static-analysis.html
- export PATH="${HOME}/.local/bin:${PATH}"
- set -o pipefail && scan-build --status-bugs xcodebuild analyze -project RZBluetooth.xcodeproj -scheme RZBluetooth -destination 'name=iPhone 6' ONLY_ACTIVE_ARCH=NO | xcpretty

- pod lib lint
